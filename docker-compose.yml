version: '2'

services:
  crawlstreams:
    build:
      context: .
      args:
        http_proxy: ${HTTP_PROXY}
        https_proxy: ${HTTPS_PROXY}
    environment:
      - "CDX_SERVER=http://cdxserver:8080/tc"
      - "WAYBACK_SERVER=http://pywb:8080/test/"
      - "KAFKA_BOOTSTRAP_SERVERS=kafka:9092"
      - "WEBHDFS_PREFIX=http://warc-server:8000/by-filename/"
    depends_on:
     - cdxserver
     - kafka
    ports:
     - "8000:8000"

  # OutbackCDX
  cdxserver:
    image: nlagovau/outbackcdx:0.5.1
    command: "java -jar outbackcdx.jar -d /cdx-data -p 8080 -b 0.0.0.0"
    ports:
      - "9090:8080"
    volumes:
      - ./integration-testing/outbackcdx-data:/cdx-data

  # Kafka
  kafka:
    image: wurstmeister/kafka:1.1.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 10
      LOG_RETENTION_HOURS: -1
      LOG_RETENTION_BYTES: -1
      NUM_PARTITIONS: 16
      KAFKA_CREATE_TOPICS: "uris.candidates.fc:16:1 --config=compression.type=snappy,uris.tocrawl.fc:16:1 --config=compression.type=snappy,uris.crawled.fc:16:1 --config=compression.type=snappy,uris.discarded.fc:16:1 --config=compression.type=snappy"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      LOG4J_LOGGER_KAFKA: WARN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  # Needs a Zookeeper too
  # ----
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
     - "2181:2181"
